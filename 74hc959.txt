====== Shift Register 74HC959 ======
* [[http://www.nxp.com/documents/data_sheet/74HC_HCT595.pdf|datasheet]]
* [[https://www.arduino.cc/en/Tutorial/ShiftOut|example code and schematics by Arduino]]
* [[https://www.youtube.com/watch?v=nXl4fb_LbcI|movie about reading buttons with the 74HC959]]
* https://www.youtube.com/watch?v=6fVbJbNPrEU

=====My example on 123d.circuits.io==
https://123d.circuits.io/circuits/1166640-74hc595-shift-register-exercise
{{:74hc959-shift-register.png?direct&700|}}

=====My second example on 123d.circuits.io (with 2x 74hc595)==
{{::74hc959-2x-shift-register.png?direct&700|}}

=====Binary counter=====
<code c>
int clockPin = 10; //SH_CP (SHift register Clock Pulse)
int latchPin = 11; //ST_CP (STorage Clock Pulse)
int dataPin = 12; //DS
int address = 0;
byte data = 0;

void setup() {
  pinMode(latchPin, OUTPUT);
  pinMode(clockPin, OUTPUT);
  pinMode(dataPin, OUTPUT);
}

void loop() {
  digitalWrite(latchPin, LOW);   //ground latchPin and hold low for as long as you are transmitting
  shiftOut(dataPin, clockPin, MSBFIRST, 0); //flags enzo
  shiftOut(dataPin, clockPin, MSBFIRST, address >> 8); //address HIGH
  shiftOut(dataPin, clockPin, MSBFIRST, address); //address LOW
  shiftOut(dataPin, clockPin, MSBFIRST, data); // data
  digitalWrite(latchPin, HIGH);
  delay(50);
  
  data++;
  address++;
}
</code>

=====74HC959 and 74HC166 combined=====
<code c>
int CLOCK = 10; // SH_CP on 74HC959 and CP on 74HC166
int DATA_OUT = 9; // DS on 74HC959
int DATA_IN = 12; // Q7 on 74HC166
int SELECT_LEDS = 8; // ST_CP on 74HC959
int SELECT_SWITCHES = 11; // !PE on 74HC166

void setup() {
  pinMode(SELECT_SWITCHES, OUTPUT);
  pinMode(SELECT_LEDS, OUTPUT);
  pinMode(CLOCK, OUTPUT);
  pinMode(DATA_OUT, OUTPUT);  
  pinMode(DATA_IN, INPUT);  
  Serial.begin(9600);
}

void loop() {
  digitalWrite(SELECT_SWITCHES, LOW);
  digitalWrite(CLOCK, HIGH);
  digitalWrite(SELECT_SWITCHES, HIGH);
  byte al = shiftIn(DATA_IN, CLOCK, MSBFIRST);
  byte ah = shiftIn(DATA_IN, CLOCK, MSBFIRST);
  
  digitalWrite(SELECT_LEDS, LOW);
  shiftOut(DATA_OUT, CLOCK, MSBFIRST, 0); //flags
  shiftOut(DATA_OUT, CLOCK, MSBFIRST, ah); //address high
  shiftOut(DATA_OUT, CLOCK, MSBFIRST, al); //address low
  shiftOut(DATA_OUT, CLOCK, MSBFIRST, 0); //data
  digitalWrite(SELECT_LEDS, HIGH);
}
</code>